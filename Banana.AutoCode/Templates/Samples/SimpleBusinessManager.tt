<#
//------------------------------------------------------------------------------
// <copyright file="SimpleBusinessManager.tt">
//    Copyright (c) 2018, https://github.com/yuanrui All rights reserved.
// </copyright>
// <author>Yuan Rui</author>
// <date>2018-04-28 18:00:00</date>
//------------------------------------------------------------------------------
#>
<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ output encoding="utf-8" extension=".cs" #>
<#@ include file="../TemplateFileManager.ttinclude" #>
<# 
    CustomHost host = (CustomHost)(Host);
    Table table = host.Table;
    host.SetValue("FILE_NAME", table.DisplayName + "Manager");
    var mgrName = table.DisplayName + "Manager";
    string entName = table.DisplayName + "Entity";
    var manager = Manager.Create(host, GenerationEnvironment);

    manager.StartNewFile(mgrName + ".cs", host.GetValue("OutputPath").ToString() + "\\Samples");
#>
//------------------------------------------------------------------------------
// <copyright file="<#= mgrName #>.cs">
//    Copyright (c) <#= DateTime.Now.ToString("yyyy") #>, All rights reserved.
// </copyright>
// <author><#= Environment.UserName #></author>
// <date><#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #></date>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text;
using Simple.Data;

/// <summary>
/// <#= string.IsNullOrEmpty(table.Comment) ? string.Format("Table/View [{0}] map to [{1}] entity class", table.Name, table.DisplayName) : table.Comment #>
/// </summary>
public partial class <#= mgrName #>
{
    public virtual bool Add(<#= entName #> entity)
    {
        const string sql = @"INSERT INTO <#= table.Name #> 
        (<#= string.Join(", ", table.Columns.Select(m => "[" + m.Name + "]")) #>) 
        VALUES (<#= string.Join(", ", table.Columns.Select(m => "@" + m.Name)) #>)";
        
        return DbUtils.Execute(sql, entity) > 0;
    }
    
    public virtual bool Update(<#= entName #> entity)
    {
        const string sql = @"UPDATE <#= table.Name #> 
        SET <#= string.Join(", ", table.Columns.Select(m => m.Name + " = @" + m.Name)) #>
        WHERE <#= string.Join(" AND ", table.PrimaryKeyColumns.Select(m => m.Name + "=@" + m.Name)) #>";
        
        return DbUtils.Execute(sql, entity) > 0;
    }
    
    public virtual bool Delete(<#= entName #> entity)
    {
        const string sql = @"DELETE FROM <#= table.Name #> WHERE <#= string.Join(" AND ", table.PrimaryKeyColumns.Select(m => m.Name + " = @" + m.Name)) #>";
        
        return DbUtils.Execute(sql, new { <#= string.Join(", ", table.PrimaryKeyColumns.Select(m => m.Name + " = entity." + m.Name)) #> }) > 0;
    }
}
<#
    manager.EndBlock(); 
    manager.Process(true);
#>