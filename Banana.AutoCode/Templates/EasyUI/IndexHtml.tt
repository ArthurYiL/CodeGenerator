<#
//------------------------------------------------------------------------------
// <copyright file="IndexHtml.tt">
//    Copyright (c) 2018, https://github.com/yuanrui All rights reserved.
// </copyright>
// <author>Yuan Rui</author>
// <date>2018-06-16 12:00:00</date>
//------------------------------------------------------------------------------
#>
<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ output encoding="utf-8" extension=".cs" #>
<#@ include file="../TemplateFileManager.ttinclude" #>
<# 
	CustomHost host = (CustomHost)(Host);
	Table table = host.Table;
    var moduleName = table.DisplayName;
    var manager = Manager.Create(host, GenerationEnvironment);
    var editParam = table.PrimaryKeyColumns.Select(m => String.Format("\"{0}=\"+row[\"{0}\"]", m.Name)).Aggregate((a, b) => a + "+\"&\"+" + b);
	manager.StartNewFile("Index.cshtml", host.GetValue("OutputPath").ToString() + "\\EasyUI\\Views\\" + table.DisplayName);
#>
@{
    ViewBag.Title = "<#= moduleName #> Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<table id="dg" class="easyui-datagrid" title="" style="width:100%;height:600px"
			data-options="fit:true,border:false,rownumbers:true,singleSelect:true,checkOnSelect:false,selectOnCheck:false,
                url:crudOption.PagerUrl,method:'post',toolbar:'#toolbar',
                pagination:true,pageSize:15,pageList: [15, 30, 60, 100]">
	<thead>
		<tr>
            <th data-options="field:'ck',checkbox:true"></th>
<#
        foreach(var col in table.Columns)
        {
#>
            <th data-options="field:'<#= col.Name #>',width:100"><#= col.Comment.Replace("\n", "") #></th>
<#
        }
#>    
		</tr>
	</thead>
</table>
<div id="toolbar">
    <a href="javascript:;" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="doCreate()"> 添加 </a>
    <a href="javascript:;" class="easyui-linkbutton" iconCls="icon-edit" plain="true" onclick="doEdit()"> 编辑 </a>
    <a href="javascript:;" class="easyui-linkbutton" iconCls="icon-remove" plain="true" onclick="doRemove()"> 删除 </a>
</div>
<div id="dlg-content" class="easyui-dialog" closed="true"></div>

@section footer{
    <script src="@Url.Content("~/Scripts/banana.utils.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var crudOption = {
            PagerUrl : "/<#= moduleName #>/Index",
            CreateUrl : "/<#= moduleName #>/Create",
            EditUrl : "/<#= moduleName #>/Edit",
            RemoveUrl : "/<#= moduleName #>/Delete",
            IsSaved : false,
            init : function() {
                this.IsSaved = false;
            }
        };
        
        function doValidate() {
            var isValidated = $(this).form("validate");
            if (! isValidated) {
                $.messager.alert("验证提示", "输入验证未通过, 请输入相应项后继续.", "warning");    
                return false;
            }

            return true;
        }

        function doCreate() {
            crudOption.init();
            var $dlgContent = $('#dlg-content');
            $dlgContent.dialog({
                title: '添加',
                width: 600,
                height: 300,
                closed: false,
                cache: false,
                href: crudOption.CreateUrl,
                modal: true,
                onLoad: function() {
                },
                onClose: function () {
                    if (crudOption.IsSaved) {
                        doReload();
                    }
                },
                toolbar:[{
				    text:'保存',
				    iconCls:'icon-ok',
				    handler:function(){
                        doSave(crudOption.CreateUrl);
                    },{
				    text:'取消',
				    iconCls:'icon-cancel',
				    handler:function(){
                        $dlgContent.dialog('close');
                    }
			    }]
            }).window("center");
        }

        function doEdit() {
            var row = $("#dg").datagrid("getSelected");
            if (typeof row == "undefined" || row == null) {
                $.messager.alert("操作提示", "未选中行, 无法进行编辑", "info");
                return;
            }
            var $dlgContent = $('#dlg-content');
            $dlgContent.dialog({
                title: '编辑',
                width: 600,
                height: 300,
                closed: false,
                cache: false,
                href: crudOption.EditUrl + "?" + <#= editParam #>,
                modal: true,
                onLoad: function() {
                    $('#fm').form('load', row);
                },
                onClose: function () {
                    if (crudOption.IsSaved) {
                        doReload();
                    }
                },
                toolbar:[{
				    text:'保存',
				    iconCls:'icon-ok',
				    handler:function(){
                        doSave(crudOption.EditUrl);
                    },{
				    text:'取消',
				    iconCls:'icon-cancel',
				    handler:function(){
                        $dlgContent.dialog('close');
                    }
			    }]
            }).window("center");
        }

        function doRemove() {
            var rows = $("#dg").datagrid("getChecked");
            if (typeof rows == "undefined" || rows == null || rows.length == 0) {
                $.messager.alert("操作提示", "没有勾选需要删除的行", "info");
                return false;
            }

            $.messager.confirm('删除确认', '你确定将勾选的行进行删除么?', function(r) {
                if (r) {
                    $.ajax({
                        url: crudOption.RemoveUrl,
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ list: rows }),
                        success: function (jsonResult) {
                            if (jsonResult == null || jsonResult == "") {
                                return;
                            }
                            var resultData = typeof jsonResult == "string" ? $.parseJSON(jsonResult) : jsonResult;
                            $.messager.alert(resultData.Title, resultData.Content, resultData.ShowType);
                            if (resultData.ShowType == "success") {
                                doReload();
                            }
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            
                        }
                    });
                }
            });
            
            return true;
        }

        function doSave(url, successFunc) {
            $('#fm').form('submit', {
                url: url,
                queryParams: { "X-Requested-With": "XMLHttpRequest" },
                onSubmit: function() {
                    var isValidated = doValidate();
                    
                    return isValidated;
                },
                success: function (jsonResult) {
                    if (jsonResult == null || jsonResult == "") {
                        return;
                    }
                    var data = typeof jsonResult == "string" ? $.parseJSON(jsonResult) : jsonResult;
                    $.messager.alert(data.Title, data.Content, data.ShowType);
                    
                    crudOption.IsSaved = true;

                    if(typeof successFunc == "function" && successFunc != null) {
                        successFunc(data);
                    }
                }
            });
        }

        function doReload() {
            $("#dg").datagrid("reload");
        }

    </script>
}
<# 
	manager.EndBlock(); 
	manager.Process(true);
#>